{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Persons.js","services/personServices.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","addPerson","onChange","handleNameChange","value","newName","handleNumberChange","newNumber","type","Filter","handleFilterChange","filter","Persons","persons","deleteAPerson","setPersons","person","name","toLowerCase","includes","map","number","onClick","window","confirm","id","element","baseUrl","getAllPersons","axios","get","then","res","data","createNewPerson","newPerson","post","delete","changePersonNumber","updatedPerson","put","Notification","message","className","App","useState","setNewName","setNewNumber","setFilter","notif","setNotif","useEffect","personServices","setNotification","setTimeout","event","target","preventDefault","doesExists","find","undefined","concat","catch","error","JSON","stringify","response","changedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1199422.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <div>\r\n      <h2>Add a new contact</h2>\r\n      <form onSubmit={props.addPerson}>\r\n        <div>\r\n          Name:{\" \"}\r\n          <input onChange={props.handleNameChange} value={props.newName} />\r\n        </div>\r\n        <div>\r\n          Number:{\" \"}\r\n          <input onChange={props.handleNumberChange} value={props.newNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ handleFilterChange, filter }) => {\r\n  return (\r\n    <div>\r\n      <h2>Filter</h2>\r\n      Filter shown with <input onChange={handleFilterChange} value={filter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ persons, filter, deleteAPerson, setPersons }) => {\r\n  return (\r\n    <div>\r\n      <h2>Numbers</h2>\r\n      <ul>\r\n        {persons\r\n          .filter(\r\n            (person) =>\r\n              person.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n              filter === \"\"\r\n          )\r\n          .map((person) => (\r\n            <li key={person.id}>\r\n              {person.name} {person.number}\r\n              <button\r\n                onClick={() => {\r\n                  const result = window.confirm(`Delete ${person.name} ?`);\r\n                  if (result) {\r\n                    deleteAPerson(person.id);\r\n                    setPersons(\r\n                      persons.filter((element) => element.id !== person.id)\r\n                    );\r\n                  }\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAllPersons = () => {\r\n  return axios.get(baseUrl).then((res) => res.data);\r\n};\r\n\r\nconst createNewPerson = (newPerson) => {\r\n  return axios.post(baseUrl, newPerson).then((res) => res.data);\r\n};\r\n\r\nconst deleteAPerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst changePersonNumber = (id, updatedPerson) => {\r\n  return axios.put(`${baseUrl}/${id}`, updatedPerson);\r\n};\r\n\r\nexport default {\r\n  getAllPersons,\r\n  createNewPerson,\r\n  deleteAPerson,\r\n  changePersonNumber,\r\n};\r\n","import React from \"react\";\r\nimport \"../index.css\";\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={type}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport PersonForm from \"./components/PersonForm\";\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Persons\";\nimport personServices from \"./services/personServices\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notif, setNotif] = useState({ message: null, type: null });\n\n  useEffect(() => {\n    personServices.getAllPersons().then((data) => setPersons(data));\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const doesExists = persons.find((person) => person.name === newName);\n\n    if (doesExists === undefined) {\n      const newPerson = { name: newName, number: newNumber };\n      personServices\n        .createNewPerson(newPerson)\n        .then((newPerson) => {\n          setPersons(persons.concat(newPerson));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setNotification(`Added ${newName}`, \"successStyle\");\n        })\n        .catch((error) => {\n          setNotification(`${JSON.stringify(error.response)}`, \"errorStyle\");\n        });\n    } else {\n      const needReplace = window.confirm(\n        `${newName} is already added to phonebook, replace the number with the new one?`\n      );\n      if (needReplace) {\n        const changedPerson = { ...doesExists, number: newNumber };\n        personServices\n          .changePersonNumber(doesExists.id, changedPerson)\n          .then((res) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== doesExists.id ? person : res.data\n              )\n            );\n            setNotification(\n              `Number of ${changedPerson.name} changed successfully`,\n              \"successStyle\"\n            );\n          })\n          .catch((error) => {\n            setNotification(\n              `Person ${changedPerson.name} not found!`,\n              \"errorStyle\"\n            );\n            setPersons(persons.filter((person) => person.id !== doesExists.id));\n          });\n      }\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const setNotification = (message, type) => {\n    setNotif({ message: message, type: type });\n    setTimeout(() => {\n      setNotif({ message: null, type: null });\n    }, 5000);\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notif.message} type={notif.type} />\n\n      <Filter handleFilterChange={handleFilterChange} filter={filter} />\n\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n      />\n\n      <Persons\n        persons={persons}\n        filter={filter}\n        deleteAPerson={personServices.deleteAPerson}\n        setPersons={setPersons}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}