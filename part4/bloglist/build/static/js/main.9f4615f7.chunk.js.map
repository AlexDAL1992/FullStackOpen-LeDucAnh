{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","App","useState","blogs","setBlogs","setTitle","setAuthor","url","setUrl","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","blogService","loggedInUser","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","console","log","loginService","setItem","stringify","setTimeout","addBlog","newBlog","onSubmit","type","value","name","onChange","target","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f4615f7.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({blog}) => (\r\n  <div>\r\n    \"{blog.title}\": by {blog.author}\r\n  </div>  \r\n)\r\n\r\nexport default Blog","import axios from \"axios\";\r\nconst baseUrl = \"/api/blogs\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, setToken };\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/login\";\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Blog from \"./components/Blog\";\r\nimport blogService from \"./services/blogs\";\r\nimport loginService from \"./services/login\";\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then((blogs) => setBlogs(blogs));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = window.localStorage.getItem(\"loggedInUser\");\r\n    if (loggedInUser) {\r\n      const user = JSON.parse(loggedInUser);\r\n      setUser(user);\r\n      blogService.setToken(user.token);\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    console.log(\"logging in with \", username, password);\r\n\r\n    try {\r\n      const user = await loginService.login({ username, password });\r\n      blogService.setToken(user.token);\r\n      window.localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\r\n      setUser(user);\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n    } catch (exception) {\r\n      setErrorMessage(\"Wrong credentials\");\r\n      setTimeout(() => {\r\n        setErrorMessage(null);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault();\r\n    const newBlog = {\r\n      title: title,\r\n      author: author,\r\n      url: url,\r\n    };\r\n\r\n    blogService.create(newBlog);\r\n    setTitle(\"\");\r\n    setAuthor(\"\");\r\n    setUrl(\"\");\r\n  };\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        Username:{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        Password:{\" \"}\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const blogForm = () => (\r\n    <form onSubmit={addBlog}>\r\n      <div>\r\n        Title:{\" \"}\r\n        <input\r\n          value={title}\r\n          onChange={({ target }) => setTitle(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        Author:{\" \"}\r\n        <input\r\n          value={author}\r\n          onChange={({ target }) => setAuthor(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        Url:{\" \"}\r\n        <input value={url} onChange={({ target }) => setUrl(target.value)} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Save</button>\r\n      </div>\r\n      <div>\r\n        {blogs.map((blog) => {\r\n          if (blog.user === user.id) {\r\n            return <Blog key={blog.id} blog={blog} />;\r\n          }\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Blogs</h2>\r\n\r\n      {/* <Notification message={errorMessage} /> */}\r\n      {user === null ? loginForm() : blogForm()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}