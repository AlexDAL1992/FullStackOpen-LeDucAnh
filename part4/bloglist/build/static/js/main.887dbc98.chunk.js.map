{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/Notification.js","App.js","index.js"],"names":["Blog","blog","title","author","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","Notification","message","type","className","App","useState","blogs","setBlogs","setTitle","setAuthor","url","setUrl","notification","setNotification","username","setUsername","password","setPassword","user","setUser","useEffect","blogService","loggedInUser","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","console","log","loginService","setItem","stringify","setTimeout","handleLogout","removeItem","addBlog","newBlog","result","onSubmit","value","name","onChange","target","onClick","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.887dbc98.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({blog}) => (\r\n  <div>\r\n    \"{blog.title}\": by {blog.author}\r\n  </div>  \r\n)\r\n\r\nexport default Blog","import axios from \"axios\";\r\nconst baseUrl = \"/api/blogs\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, setToken };\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/login\";\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import React from \"react\";\r\nimport '../index.css'\r\n\r\nconst Notification = ({ message, type }) => {\r\n  return <div className={type}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Blog from \"./components/Blog\";\r\nimport blogService from \"./services/blogs\";\r\nimport loginService from \"./services/login\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  const [notification, setNotification] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then((blogs) => setBlogs(blogs));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = window.localStorage.getItem(\"loggedInUser\");\r\n    if (loggedInUser) {\r\n      const user = JSON.parse(loggedInUser);\r\n      setUser(user);\r\n      blogService.setToken(user.token);\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    console.log(\"logging in with \", username, password);\r\n\r\n    try {\r\n      const user = await loginService.login({ username, password });\r\n      blogService.setToken(user.token);\r\n      window.localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\r\n      setUser(user);\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n    } catch (exception) {\r\n      setNotification({ message: \"Wrong credentials\", type: \"error\" });\r\n      setTimeout(() => {\r\n        setNotification(null);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  const handleLogout = (event) => {\r\n    event.preventDefault();\r\n    window.localStorage.removeItem(\"loggedInUser\");\r\n    setUser(null);\r\n  };\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault();\r\n    const newBlog = {\r\n      title: title,\r\n      author: author,\r\n      url: url,\r\n    };\r\n\r\n    const result = blogService.create(newBlog);\r\n    setTitle(\"\");\r\n    setAuthor(\"\");\r\n    setUrl(\"\");\r\n    blogService.getAll().then((blogs) => setBlogs(blogs));\r\n    setNotification({\r\n      message: `A new blog with title \"${result.title}\" and author \"${result.author}\" has been successfully added!`,\r\n      type: \"success\",\r\n    });\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        Username:{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        Password:{\" \"}\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const blogForm = () => (\r\n    <div>\r\n      <div>\r\n        Welcome back, {user.username}\r\n        <button type=\"button\" onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n      <form onSubmit={addBlog}>\r\n        <div>\r\n          Title:{\" \"}\r\n          <input\r\n            value={title}\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          Author:{\" \"}\r\n          <input\r\n            value={author}\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          Url:{\" \"}\r\n          <input value={url} onChange={({ target }) => setUrl(target.value)} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">Create</button>\r\n        </div>\r\n        <div>\r\n          {blogs.map((blog) => {\r\n            if (blog.user.id === user.id)\r\n              return <Blog key={blog.id} blog={blog} />;\r\n          })}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Blogs</h2>\r\n\r\n      <Notification message={notification.message} type={notification.type} />\r\n      {user === null ? loginForm() : blogForm()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}